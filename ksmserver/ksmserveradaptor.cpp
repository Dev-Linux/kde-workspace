/*
 * This file was generated by dbusidl2cpp version 0.6
 * Command line was: dbusidl2cpp -m -a ksmserveradaptor -- org.kde.ksmserver.KSmserver.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "ksmserveradaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KSmserverAdaptor
 */

KSmserverAdaptor::KSmserverAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KSmserverAdaptor::~KSmserverAdaptor()
{
    // destructor
}

void KSmserverAdaptor::autoStart2()
{
    // handle method call org.kde.ksmserver.KSmserver.autoStart2
    QMetaObject::invokeMethod(parent(), "autoStart2");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->autoStart2();
}

QString KSmserverAdaptor::currentSession()
{
    // handle method call org.kde.ksmserver.KSmserver.currentSession
    QString out0;
    QMetaObject::invokeMethod(parent(), "currentSession", Q_RETURN_ARG(QString, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->currentSession();
    return out0;
}

void KSmserverAdaptor::logout(int confirm, int sdtype, int sdmode)
{
    // handle method call org.kde.ksmserver.KSmserver.logout
    QMetaObject::invokeMethod(parent(), "logout", Q_ARG(int, confirm), Q_ARG(int, sdtype), Q_ARG(int, sdmode));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->logout(confirm, sdtype, sdmode);
}

void KSmserverAdaptor::restoreSessionDoneInternal()
{
    // handle method call org.kde.ksmserver.KSmserver.restoreSessionDoneInternal
    QMetaObject::invokeMethod(parent(), "restoreSessionDoneInternal");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->restoreSessionDoneInternal();
}

void KSmserverAdaptor::restoreSessionInternal()
{
    // handle method call org.kde.ksmserver.KSmserver.restoreSessionInternal
    QMetaObject::invokeMethod(parent(), "restoreSessionInternal");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->restoreSessionInternal();
}

void KSmserverAdaptor::resumeStartup(const QString &name)
{
    // handle method call org.kde.ksmserver.KSmserver.resumeStartup
    QMetaObject::invokeMethod(parent(), "resumeStartup", Q_ARG(QString, name));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->resumeStartup(name);
}

void KSmserverAdaptor::saveCurrentSession()
{
    // handle method call org.kde.ksmserver.KSmserver.saveCurrentSession
    QMetaObject::invokeMethod(parent(), "saveCurrentSession");

    // Alternative:
    //static_cast<YourObjectType *>(parent())->saveCurrentSession();
}

void KSmserverAdaptor::saveCurrentSessionAs(const QString &name)
{
    // handle method call org.kde.ksmserver.KSmserver.saveCurrentSessionAs
    QMetaObject::invokeMethod(parent(), "saveCurrentSessionAs", Q_ARG(QString, name));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->saveCurrentSessionAs(name);
}

QStringList KSmserverAdaptor::sessionList()
{
    // handle method call org.kde.ksmserver.KSmserver.sessionList
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "sessionList", Q_RETURN_ARG(QStringList, out0));

    // Alternative:
    //out0 = static_cast<YourObjectType *>(parent())->sessionList();
    return out0;
}

void KSmserverAdaptor::suspendStartup(const QString &name)
{
    // handle method call org.kde.ksmserver.KSmserver.suspendStartup
    QMetaObject::invokeMethod(parent(), "suspendStartup", Q_ARG(QString, name));

    // Alternative:
    //static_cast<YourObjectType *>(parent())->suspendStartup(name);
}


#include "ksmserveradaptor.moc"
