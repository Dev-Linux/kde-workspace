/*
 * This file was generated by dbusidl2cpp version 0.5
 * when processing input file org.kde.kwin.Kwin.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef KWINADAPTOR_H_93481149670720
#define KWINADAPTOR_H_93481149670720

#include <QtCore/QObject>
#include <dbus/qdbus.h>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface org.kde.kwin.KWin
 */
class KWinAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.kwin.KWin")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.kwin.KWin\" >\n"
"    <method name=\"cascadeDesktop\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"unclutterDesktop\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"reconfigure\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"killWindow\" >\n"
"      <annotation value=\"true\" name=\"org.freedesktop.DBus.Method.NoReply\" />\n"
"    </method>\n"
"    <method name=\"refresh\" />\n"
"    <method name=\"doNotManage\" >\n"
"      <arg direction=\"in\" type=\"s\" name=\"name\" />\n"
"    </method>\n"
"    <method name=\"showWindowMenuAt\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"winId\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\" />\n"
"    </method>\n"
"    <method name=\"setDesktopLayout\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"orientation\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\" />\n"
"    </method>\n"
"    <method name=\"setCurrentDesktop\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"desktop\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"currentDesktop\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"nextDesktop\" />\n"
"    <method name=\"previousDesktop\" />\n"
"    <method name=\"circulateDesktopApplications\" />\n"
"    <method name=\"startKompmgr\" />\n"
"    <method name=\"stopKompmgr\" />\n"
"    <method name=\"kompmgrIsRunning\" >\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setOpacity\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"winId\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"opacityPercent\" />\n"
"    </method>\n"
"    <method name=\"setShadowSize\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"winId\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"shadowSizePercent\" />\n"
"    </method>\n"
"    <method name=\"setUnshadowed\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"winId\" />\n"
"    </method>\n"
"    <signal name=\"kompmgrStarted\" />\n"
"    <signal name=\"kompmgrStopped\" />\n"
"    <signal name=\"dcopResetAllClients\" />\n"
"  </interface>\n"
        "")
public:
    KWinAdaptor(QObject *parent);
    virtual ~KWinAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    Q_ASYNC void cascadeDesktop();
    void circulateDesktopApplications();
    int currentDesktop();
    void doNotManage(const QString &name);
    Q_ASYNC void killWindow();
    bool kompmgrIsRunning();
    void nextDesktop();
    void previousDesktop();
    Q_ASYNC void reconfigure();
    void refresh();
    bool setCurrentDesktop(int desktop);
    void setDesktopLayout(int orientation, int x, int y);
    void setOpacity(int winId, int opacityPercent);
    void setShadowSize(int winId, int shadowSizePercent);
    void setUnshadowed(int winId);
    void showWindowMenuAt(int winId, int x, int y);
    void startKompmgr();
    void stopKompmgr();
    Q_ASYNC void unclutterDesktop();
Q_SIGNALS: // SIGNALS
    void dcopResetAllClients();
    void kompmgrStarted();
    void kompmgrStopped();
};

#endif
