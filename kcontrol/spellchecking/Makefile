# Generated automatically from Makefile.in by configure.
# KDE tags expanded automatically by am_edit - $Revision$ 
# Makefile.in generated automatically by automake 1.4 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..
prefix = /usr/
exec_prefix = ${prefix}
#>- 
bindir = ${exec_prefix}/bin
#>+ 3
DEPDIR = .deps

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/kdebase
pkglibdir = $(libdir)/kdebase
pkgincludedir = $(includedir)/kdebase

top_builddir = ../..

ACLOCAL = aclocal
AUTOCONF = autoconf
AUTOMAKE = automake
AUTOHEADER = autoheader

INSTALL = /usr/bin/install -c -p
INSTALL_PROGRAM = ${INSTALL} $(INSTALL_STRIP_FLAG) $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = i686-pc-linux-gnu
build_triplet = i686-pc-linux-gnu
host_alias = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
target_alias = i686-pc-linux-gnu
target_triplet = i686-pc-linux-gnu
ACCESS_SUBDIR = access
ARTSCCONFIG = /usr//bin/artsc-config
AS = @AS@
AUDIOCD_SUBDIR = 
AUTODIRS = 
BZIP2FILES = 
CC = gcc
CDPARANOIA_INCS = 
CDPARANOIA_LIBS = 
CDPARANOIA_RPATH = 
CONF_FILES =  $(top_srcdir)/./admin/configure.in.min $(top_srcdir)/configure.in.in $(top_srcdir)/./kappfinder/configure.in.in $(top_srcdir)/./kcontrol/access/configure.in.in $(top_srcdir)/./kcontrol/configure.in.in $(top_srcdir)/./kcontrol/crypto/configure.in.in $(top_srcdir)/./kcontrol/info/configure.in.in $(top_srcdir)/./kcontrol/kdedb/configure.in.in $(top_srcdir)/./kcontrol/thememgr/configure.in.in $(top_srcdir)/./kdeprint/configure.in.in $(top_srcdir)/./kdeprint/kprinter/configure.in.in $(top_srcdir)/./kdesu/configure.in.in $(top_srcdir)/./kdm/configure.in.in $(top_srcdir)/./kioslave/audiocd/configure.in.in $(top_srcdir)/./kioslave/filter/configure.in.in $(top_srcdir)/./kioslave/help/configure.in.in $(top_srcdir)/./kioslave/ldap/configure.in.in $(top_srcdir)/./kioslave/smb/configure.in.in $(top_srcdir)/./kioslave/sql/configure.in.in $(top_srcdir)/./kscreensaver/xsavers/configure.in.in $(top_srcdir)/./ksmserver/configure.in.in $(top_srcdir)/./ksysguard/configure.in.in $(top_srcdir)/./kxkb/configure.in.in $(top_srcdir)/./nsplugins/configure.in.in $(top_srcdir)/configure.in.bot
CONN_FLAGS = -DUNIXCONN -DTCPCONN
CPP = gcc -E
CUPSSUBDIR = 
CXX = g++
CXXCPP = g++ -E
DCOPIDL = /usr//bin/dcopidl
DCOPIDL2CPP = /usr//bin/dcopidl2cpp
DCOP_DEPENDENCIES = $(DCOPIDL)
DLLTOOL = @DLLTOOL@
DPMSINC = 
DPMSLIB =  $(LIB_X11)
EXEEXT = 
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = 
GLLIB = 
GL_SAVERS = 
GMSGFMT = /usr/bin/msgfmt
HELP_SLAVE = 
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
KCM_AUDIOCD = 
KDB2HTML = /usr//bin/kdb2html
KDECONFIG = /usr//bin/kde-config
KDEDB_INCLUDES = /usr//include
KDEDB_LIBS = /usr//lib
KDEDB_SUBDIR = kdedb
KDE_CXXFLAGS = 
KDE_EXTRA_RPATH = 
KDE_INCLUDES = -I/usr//include
KDE_LDFLAGS = -L/usr//lib
KDE_PLUGIN = -avoid-version -module -no-undefined
KDE_RPATH = -R $(kde_libraries) -R $(x_libraries)
KDE_USE_CLOSURE_FALSE = #
KDE_USE_CLOSURE_TRUE = 
KDE_USE_FINAL_FALSE = 
KDE_USE_FINAL_TRUE = #
KDM_GREET_LIBS = 
KERBEROS_INCS = 
KERBEROS_LIBS = 
KERBEROS_ROOT = 
KRB_RPATH = 
LAME_INCS = 
LAME_LIBS = 
LAME_RPATH = 
LDAP_INCS = 
LDAP_LIBS = 
LDAP_RPATH = 
LDAP_SUBDIR = 
LIBALIB = 
LIBCFG = 
LIBCOMPAT = 
LIBCRYPT = -lcrypt
LIBCURSES = -lcurses
LIBDEVINFO = 
LIBDL = -ldl
LIBJPEG = -ljpeg
LIBKSTAT = 
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBODM = 
LIBOSSAUDIO = 
LIBPNG = 
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = 
LIBSENSORS = 
LIBSM = -lSM -lICE
LIBSOCKET = 
LIBSSL = 
LIBTIFF = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUCB = 
LIBUTEMPTER = 
LIBUTIL = -lutil
LIBXDMCP = -lXdmcp
LIBXML_CFLAGS = 
LIBXML_LIBS = 
LIBXML_RPATH = 
LIBZ = -lz
LIB_CUPS = 
LIB_KAB = -lkab
LIB_KDB = -lkdbui -lkdbcore
LIB_KDBCORE = -lkdbcore
LIB_KDBUI = -lkdbui
LIB_KDECORE = -lkdecore
LIB_KDEUI = -lkdeui
LIB_KFILE = -lkfile
LIB_KFM = 
LIB_KFORMULA = -lkformula
LIB_KHTML = -lkhtml
LIB_KIMGIO = -lkimgio
LIB_KIO = -lkio
LIB_KPARTS = -lkparts
LIB_KSPELL = -lkspell
LIB_KSYCOCA = -lksycoca
LIB_KWRITE = -lkwrite
LIB_LIBS = 
LIB_QT = -lqt $(LIBPNG) $(LIBJPEG) -lXext $(LIB_X11) $(LIBSM)
LIB_SMB = -lsmb
LIB_TRU64_MACH = 
LIB_X11 = -lX11 $(LIBSOCKET)
LN_S = ln -s
MAKEINFO = makeinfo
MCOPIDL = /usr//bin/mcopidl
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = /usr/lib/qt2/bin/moc
MOTIF_CFLAGS = 
MOTIF_LIBS =  -lXp
MSGFMT = /usr/bin/msgfmt
M_LIBS = -lm
NOOPT_CXXFLAGS =  -fno-exceptions -fno-check-new
NOREPO = -fno-repo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = kdebase
PAMINC = 
PAMLIBPATHS = 
PAMLIBS = 
PASSWDLIB = 
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QT_INCLUDES = -I/usr/lib/qt2/include
QT_LDFLAGS = 
RANLIB = ranlib
REPO = -frepo
RUN_KAPPFINDER = yes
SETUIDFLAGS = -m 4755
SMB_SUBDIR = 
SQL_SUBDIR = sql
SSL_INCLUDES = 
SSL_LDFLAGS = 
STD_DEFINES = -Dlinux -D__i386__ -D_POSIX_C_SOURCE=199309L -D_POSIX_SOURCE -D_XOPEN_SOURCE -D_BSD_SOURCE -D_SVID_SOURCE
STRIP = strip
TOPSUBDIRS =  applnk doc drkonqi kappfinder kate kcheckpass kcontrol kdcop kdebugdialog kdeprint kdesktop kdesu kdm khelpcenter khotkeys kicker kioslave klipper kmenuedit konqueror konsole kpager kreadconfig kscreensaver ksmserver ksplash kstart ksysguard ktip kwin kxkb kxmlrpc l10n legacyimport pics
UIC = /usr/lib/qt2/bin/uic
UNAME = Linux
USER_INCLUDES = 
USER_LDFLAGS = 
USE_EXCEPTIONS = -fexceptions
USE_RTTI = -frtti
USE_THREADS = @USE_THREADS@
VERSION = 2.2alpha1
VORBISENC_LIBS = 
VORBISFILE_LIBS = 
VORBIS_INCS = 
VORBIS_LIBS = 
VORBIS_RPATH = 
WITH_MEM_DEBUG = 0
WITH_XSLT_DEBUG = 0
XBINDIR = /usr/X11R6/bin
XDMDIR = /etc/X11/xdm
XGETTEXT = /usr/bin/xgettext
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
XTESTLIB = -lXtst
X_EXTRA_LIBS = 
X_INCLUDES = -I/usr/X11R6/include
X_LDFLAGS = -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
X_SERVER = /usr/X11R6/bin
all_includes = -I/usr//include -I/usr/lib/qt2/include -I/usr/X11R6/include 
all_libraries = -L/usr/X11R6/lib -L/usr//lib 
idldir = @idldir@
include_motif = 
kde_appsdir = ${prefix}/share/applnk
kde_bindir = ${exec_prefix}/bin
kde_confdir = ${prefix}/share/config
kde_datadir = ${prefix}/share/apps
kde_htmldir = ${prefix}/share/doc/HTML
kde_icondir = ${prefix}/share/icons
kde_includes = /usr//include
kde_libraries = /usr//lib
kde_libs_htmldir = /usr//share/doc/HTML
kde_libs_prefix = /usr/
kde_locale = ${prefix}/share/locale
kde_mimedir = ${prefix}/share/mimelnk
kde_moduledir = ${exec_prefix}/lib/kde2
kde_servicesdir = ${prefix}/share/services
kde_servicetypesdir = ${prefix}/share/servicetypes
kde_sounddir = ${prefix}/share/sounds
kde_templatesdir = ${prefix}/share/templates
kde_wallpaperdir = ${prefix}/share/wallpapers
kdmchooserdir = chooser
kdmgreetera = 
kdmgreeterla = libKdmGreet.la
link_motif = 
micodir = @micodir@
nogroup = nogroup
qt_includes = /usr/lib/qt2/include
qt_libraries = 
x_includes = /usr/X11R6/include
x_libraries = /usr/X11R6/lib

kde_module_LTLIBRARIES = libkcm_spellchecking.la

libkcm_spellchecking_la_SOURCES = spellchecking.cpp

libkcm_spellchecking_la_LDFLAGS = $(all_libraries) -module -avoid-version -no-undefined
libkcm_spellchecking_la_LIBADD = -lkdeui -lkspell

INCLUDES = $(all_includes)

#>- libkcm_spellchecking_la_METASOURCES = spellchecking.moc

KDE_ICON = spellchecking

data_DATA = spellchecking.desktop
datadir = $(kde_appsdir)/Settings/Personalization
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
LTLIBRARIES =  $(kde_module_LTLIBRARIES)


DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../..
CPPFLAGS = 
LDFLAGS = 
LIBS = 
X_CFLAGS =  -I/usr/X11R6/include
X_LIBS =  -L/usr/X11R6/lib
libkcm_spellchecking_la_DEPENDENCIES = 
#>- libkcm_spellchecking_la_OBJECTS =  spellchecking.lo
#>+ 5
libkcm_spellchecking_la_final_OBJECTS = libkcm_spellchecking_la.all_cpp.lo 
libkcm_spellchecking_la_nofinal_OBJECTS = spellchecking.lo \
libkcm_spellchecking_la_meta_unload.lo 
libkcm_spellchecking_la_OBJECTS = $(libkcm_spellchecking_la_nofinal_OBJECTS)
#libkcm_spellchecking_la_OBJECTS = $(libkcm_spellchecking_la_final_OBJECTS)
CXXFLAGS = -O2 -fno-exceptions -fno-check-new -DQT_CLEAN_NAMESPACE -DQT_NO_COMPAT -DQT_NO_ASCII_CAST
#>- CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 1
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
#>+ 1
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) $(LDFLAGS) -o $@
DATA =  $(data_DATA)

DIST_COMMON =  Makefile.am Makefile.in


#>- DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=libkcm_spellchecking.la.closure spellchecking.h spellchecking.desktop libkcm_spellchecking_la_meta_unload.cpp 

DISTFILES= $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


TAR = gtar
GZIP_ENV = --best
#>- DEP_FILES =  .deps/spellchecking.P
#>+ 4
#DEP_FILES =  $(DEPDIR)/libkcm_spellchecking_la_meta_unload.P  $(DEPDIR)/libkcm_spellchecking_la.all_cpp.P \
	  .deps/spellchecking.P
DEP_FILES =  $(DEPDIR)/libkcm_spellchecking_la_meta_unload.P   .deps/spellchecking.P

SOURCES = $(libkcm_spellchecking_la_SOURCES)
OBJECTS = $(libkcm_spellchecking_la_OBJECTS)

#>- all: all-redirect
#>+ 1
all: docs-am  all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cpp .lo .o .obj .s
$(srcdir)/Makefile.in: Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
#>- 	cd $(top_srcdir) && $(AUTOMAKE) --gnu kcontrol/spellchecking/Makefile
#>+ 2
	cd $(top_srcdir) && $(AUTOMAKE) --gnu kcontrol/spellchecking/Makefile
	cd $(top_srcdir) && perl admin/am_edit kcontrol/spellchecking/Makefile.in

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-kde_moduleLTLIBRARIES:

clean-kde_moduleLTLIBRARIES:
	-test -z "$(kde_module_LTLIBRARIES)" || rm -f $(kde_module_LTLIBRARIES)

distclean-kde_moduleLTLIBRARIES:

maintainer-clean-kde_moduleLTLIBRARIES:

install-kde_moduleLTLIBRARIES: $(kde_module_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kde_moduledir)
	@list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    echo "$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(kde_moduledir)/$$p"; \
	    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(kde_moduledir)/$$p; \
	  else :; fi; \
	done

uninstall-kde_moduleLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	list='$(kde_module_LTLIBRARIES)'; for p in $$list; do \
	  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(kde_moduledir)/$$p; \
	done

# FIXME: We should only use cygpath when building on Windows,
# and only if it is available.
.c.obj:
	$(COMPILE) -c `cygpath -w $<`

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

#>- libkcm_spellchecking.la: $(libkcm_spellchecking_la_OBJECTS) $(libkcm_spellchecking_la_DEPENDENCIES)
#>+ 2
libkcm_spellchecking.la: libkcm_spellchecking.la.closure $(libkcm_spellchecking_la_OBJECTS) $(libkcm_spellchecking_la_DEPENDENCIES)
#libkcm_spellchecking.la: $(libkcm_spellchecking_la_OBJECTS) $(libkcm_spellchecking_la_DEPENDENCIES)
	$(CXXLINK) -rpath $(kde_moduledir) $(libkcm_spellchecking_la_LDFLAGS) $(libkcm_spellchecking_la_OBJECTS) $(libkcm_spellchecking_la_LIBADD) $(LIBS)
.cpp.o:
	$(CXXCOMPILE) -c $<
.cpp.obj:
	$(CXXCOMPILE) -c `cygpath -w $<`
.cpp.lo:
	$(LTCXXCOMPILE) -c $<

install-dataDATA: $(data_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(datadir)
	@list='$(data_DATA)'; for p in $$list; do \
	  if test -f $(srcdir)/$$p; then \
	    echo " $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(datadir)/$$p"; \
	    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(datadir)/$$p; \
	  else if test -f $$p; then \
	    echo " $(INSTALL_DATA) $$p $(DESTDIR)$(datadir)/$$p"; \
	    $(INSTALL_DATA) $$p $(DESTDIR)$(datadir)/$$p; \
	  fi; fi; \
	done

uninstall-dataDATA:
	@$(NORMAL_UNINSTALL)
	list='$(data_DATA)'; for p in $$list; do \
	  rm -f $(DESTDIR)$(datadir)/$$p; \
	done

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = kcontrol/spellchecking

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu kcontrol/spellchecking/Makefile
#>- 	@for file in $(DISTFILES); do \
#>- 	  d=$(srcdir); \
#>- 	  if test -d $$d/$$file; then \
#>- 	    cp -pr $$/$$file $(distdir)/$$file; \
#>- 	  else \
#>- 	    test -f $(distdir)/$$file \
#>- 	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
#>- 	    || cp -p $$d/$$file $(distdir)/$$file || :; \
#>- 	  fi; \
#>- 	done
#>+ 10
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cpp
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cpp
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am: install-kde_moduleLTLIBRARIES install-dataDATA
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am: uninstall-kde_moduleLTLIBRARIES uninstall-dataDATA
uninstall: uninstall-am
all-am: Makefile $(LTLIBRARIES) $(DATA)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:
	$(mkinstalldirs)  $(DESTDIR)$(kde_moduledir) $(DESTDIR)$(datadir)


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
mostlyclean-am:  mostlyclean-kde_moduleLTLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-tags mostlyclean-depend \
		mostlyclean-generic

mostlyclean: mostlyclean-am

#>- clean-am:  clean-kde_moduleLTLIBRARIES clean-compile clean-libtool \
#>- 		clean-tags clean-depend clean-generic mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-closures clean-moc-classes clean-final   clean-kde_moduleLTLIBRARIES clean-compile clean-libtool \
		clean-tags clean-depend clean-generic mostlyclean-am

#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

distclean-am:  distclean-kde_moduleLTLIBRARIES distclean-compile \
		distclean-libtool distclean-tags distclean-depend \
		distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-kde_moduleLTLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-tags maintainer-clean-depend \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-kde_moduleLTLIBRARIES \
distclean-kde_moduleLTLIBRARIES clean-kde_moduleLTLIBRARIES \
maintainer-clean-kde_moduleLTLIBRARIES uninstall-kde_moduleLTLIBRARIES \
install-kde_moduleLTLIBRARIES mostlyclean-compile distclean-compile \
clean-compile maintainer-clean-compile mostlyclean-libtool \
distclean-libtool clean-libtool maintainer-clean-libtool \
uninstall-dataDATA install-dataDATA tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags distdir \
mostlyclean-depend distclean-depend clean-depend \
maintainer-clean-depend info-am info dvi-am dvi check check-am \
installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


messages:
	$(XGETTEXT) $(libkcm_spellchecking_la_SOURCES) -o $(podir)/kcmspellchecking.pot

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 8
libkcm_spellchecking.la.closure: $(libkcm_spellchecking_la_OBJECTS) $(libkcm_spellchecking_la_DEPENDENCIES)
	@echo "int main() {return 0;}" > libkcm_spellchecking_la_closure.cpp
	@$(LTCXXCOMPILE) -c libkcm_spellchecking_la_closure.cpp
	@$(CXXLINK) libkcm_spellchecking_la_closure.lo $(libkcm_spellchecking_la_LDFLAGS) $(libkcm_spellchecking_la_OBJECTS) $(libkcm_spellchecking_la_LIBADD) $(LIBS)
	@rm -f libkcm_spellchecking_la_closure.* libkcm_spellchecking.la.closure
	@echo "timestamp" > libkcm_spellchecking.la.closure


#>+ 3
spellchecking.moc: $(srcdir)/spellchecking.h
	$(MOC) $(srcdir)/spellchecking.h -o spellchecking.moc

#>+ 3
clean-metasources:
	-rm -f  spellchecking.moc

#>+ 3
clean-closures:
	-rm -f  libkcm_spellchecking.la.closure

#>+ 2
docs-am:

#>+ 5
force-reedit:
		cd $(top_srcdir) && $(AUTOMAKE) --gnu kcontrol/spellchecking/Makefile
	cd $(top_srcdir) && perl admin/am_edit kcontrol/spellchecking/Makefile.in


#>+ 10
libkcm_spellchecking_la_meta_unload.cpp:  spellchecking.moc
	@echo 'creating libkcm_spellchecking_la_meta_unload.cpp'
	@-rm -f libkcm_spellchecking_la_meta_unload.cpp
	@echo 'static const char * _metalist_libkcm_spellchecking_la[] = {' > libkcm_spellchecking_la_meta_unload.cpp
	@cat  spellchecking.moc | grep 'char.*className' | sed -e 's/.*[^A-Za-z0-9_:]\([A-Za-z0-9_:]*\)::className.*$$/\"\1\",/' | sort | uniq >> libkcm_spellchecking_la_meta_unload.cpp
	@echo '0};' >> libkcm_spellchecking_la_meta_unload.cpp
	@echo '#include <kunload.h>' >> libkcm_spellchecking_la_meta_unload.cpp
	@echo '_UNLOAD(libkcm_spellchecking_la)' >> libkcm_spellchecking_la_meta_unload.cpp


#>+ 3
clean-moc-classes:
	-rm -f  libkcm_spellchecking_la_meta_unload.cpp

#>+ 11
libkcm_spellchecking_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/spellchecking.cpp $(srcdir)/libkcm_spellchecking_la_meta_unload.cpp   spellchecking.moc 
	@echo 'creating libkcm_spellchecking_la.all_cpp.cpp ...'; \
	rm -f libkcm_spellchecking_la.all_cpp.files libkcm_spellchecking_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libkcm_spellchecking_la.all_cpp.final; \
	for file in spellchecking.cpp libkcm_spellchecking_la_meta_unload.cpp ; do \
	  echo "#include \"$$file\"" >> libkcm_spellchecking_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libkcm_spellchecking_la.all_cpp.final; \
	done; \
	cat libkcm_spellchecking_la.all_cpp.final libkcm_spellchecking_la.all_cpp.files  > libkcm_spellchecking_la.all_cpp.cpp; \
	rm -f libkcm_spellchecking_la.all_cpp.final libkcm_spellchecking_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libkcm_spellchecking_la.all_cpp.cpp

#>+ 2
final:
	$(MAKE) libkcm_spellchecking_la_OBJECTS="$(libkcm_spellchecking_la_final_OBJECTS)" all-am
#>+ 2
no-final:
	$(MAKE) libkcm_spellchecking_la_OBJECTS="$(libkcm_spellchecking_la_nofinal_OBJECTS)" all-am
#>+ 3
cvs-clean:
	$(MAKE) -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 2
$(srcdir)/spellchecking.cpp: spellchecking.moc 
