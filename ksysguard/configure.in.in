dnl Check whether ksysguardd can run; 
AC_MSG_CHECKING([if ksysguardd can be compiled])
case "$host" in 
  *-*-linux*) ksysguardd_compile=yes; UNAME='Linux' ;;
  *-*-freebsd*) ksysguardd_compile=yes; UNAME='FreeBSD' ;;
  *-*-netbsd*) ksysguardd_compile=yes; UNAME='NetBSD' ;;
  *-*-solaris*) ksysguardd_compile=yes; UNAME='Solaris' ;;
  *-*-osf*) ksysguardd_compile=yes; UNAME='Tru64' ;;
  *-*-irix*) ksysguardd_compile=yes; UNAME='Irix' ;;
  *-*-openbsd*) ksysguardd_compile=yes; UNAME='OpenBSD' ;;
  *) ksysguardd_compile=no; UNAME='' ;;
esac

AC_MSG_RESULT($ksysguardd_compile)

AM_CONDITIONAL(include_ksysguardd, test "$ksysguardd_compile" = "yes")
AM_CONDITIONAL(include_ksysguardd_linux, test "$UNAME" = Linux)
AM_CONDITIONAL(include_ksysguardd_freebsd, test "$UNAME" = FreeBSD)
AM_CONDITIONAL(include_ksysguardd_netbsd, test "$UNAME" = NetBSD)
AM_CONDITIONAL(include_ksysguardd_solaris, test "$UNAME" = Solaris)
AM_CONDITIONAL(include_ksysguardd_tru64, test "$UNAME" = Tru64)
AM_CONDITIONAL(include_ksysguardd_irix, test "$UNAME" = Irix)
AM_CONDITIONAL(include_ksysguardd_openbsd, test "$UNAME" = OpenBSD)
AC_SUBST(UNAME)

AC_ARG_WITH(sensors,
	[AC_HELP_STRING(--with-sensors,
		[enable support for lm_sensors @<:@default=check@:>@])],
	[], with_sensors=check)

if test "x$with_sensors" != xno; then
	KDE_CHECK_HEADERS(sensors/sensors.h)
	KDE_CHECK_LIB(sensors, sensors_init, [LIBSENSORS="-lsensors"])

	if test "x$with_sensors" != xcheck && test -z "$LIBSENSORS"; then
        	AC_MSG_ERROR([--with-sensors was given, but test for lm_sensors failed])
	fi
fi

case "$UNAME" in
	Linux) LIBHOSTS="$LIBSENSORS" ;;
	FreeBSD) LIBHOSTS="$LIBSENSORS -lkvm" ;;
	Solaris) LIBHOSTS="$LIBSENSORS -lkstat -lsocket" ;;
esac
AC_SUBST(LIBHOSTS)
AC_SUBST(LIBSENSORS)

dnl Check for dell laptop support
AM_CONDITIONAL(supports_i8k, test -f /proc/i8k)

dnl THIS IS ALL XRES STUFF NOW, taken from xrestop

XRES_LIBS=	

PKG_CHECK_MODULES(X11, x11, [have_libx11pc="yes"], [have_libx11pc="no"])

if test $have_libx11pc = yes; then
   PKG_CHECK_MODULES(XLIBS, x11 xres xext)
else
dnl **** Check for xlibs 'non pc' way ****
AC_PATH_XTRA

ALL_X_LIBS="$X_LIBS -lX11"

found_xres_lib=no
AC_CHECK_LIB(XRes, XResQueryClients, XRES_LIBS=-lXRes found_xres_lib=yes,,
	-lXext $ALL_X_LIBS)

if test "x$found_xres_lib" = "xno"; then
    # Try again, overriding defaults for certain platforms
    case `uname -sr` in
      	"SunOS 5"*)
	    # Solaris ships libXres in /usr/openwin/sfw/lib
	    save_LDFLAGS=$LDFLAGS
	    SOL_XRES_LDFLAGS="-L/usr/openwin/sfw/lib -R/usr/openwin/sfw/lib"
	    LDFLAGS="$LDFLAGS $SOL_XRES_LDFLAGS"
	    AC_CHECK_LIB(XRes, XResQueryClientResources, 
		found_xres_lib=yes XRES_LIBS="$SOL_XRES_LDFLAGS -lXRes",
		,-lXext $ALL_X_LIBS)
	    LDFLAGS="$save_LDFLAGS"
	;;
    esac
fi


if test "x$found_xres_lib" = "xno"; then
   AC_MSG_ERROR([Cannot find XRes extension library])
   exit 1
fi

found_xres=no

AC_CHECK_HEADER(X11/extensions/XRes.h,found_xres=yes,,[#include <X11/Xlib.h>])

if test "x$found_xres" = "xno"; then
   AC_MSG_ERROR([Cannot find XRes extension headers])
   exit 1
fi

XLIBS_LIBS="$XRES_LIBS -lXext $ALL_X_LIBS"
   	
fi

AC_SUBST(XLIBS_CFLAGS)
AC_SUBST(XLIBS_LIBS)

